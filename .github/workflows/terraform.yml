name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 저장소에서 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. 현재 디렉토리 확인
      - name: Check working directory
        run: pwd

      - name: List files
        run: ls -R

      # 3. Terraform 설치
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

       # 3. .terraform 폴더 및 상태 파일 삭제
      - name: Clean Terraform state files
        run: |
          rm -rf .terraform/terraform.tfstate
          rm -rf .terraform/terraform.tfstate.backup
          rm -rf .terraform/


      # 4. Terraform 초기화
      - name: Terraform Init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # 5. Terraform 코드 유효성 검증
      - name: Terraform Validate
        run: terraform validate

      # 6. Terraform 포맷 확인
      - name: Terraform Format Check
        run: terraform fmt -check

      # 7. Terraform Plan 생성
      - name: Terraform Plan
        run: terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # 8. Terraform Apply (main 브랜치에 병합될 때만 실행)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

